version: 2.1

orbs:
  welcome: circleci/welcome-orb@0.4.1

jobs: 
  build_backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: npm install and build
          working_directory: ./backend
          command: |
            npm install
            npm run build
      - persist_to_workspace:
          root: .
          paths:
            - backend/node_modules
            - backend/dist

  build_frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: npm install and build
          working_directory: ./frontend
          command: |
            npm install
            npm run build
      - persist_to_workspace:
          root: .
          paths:
            - frontend/node_modules

  backend_test:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
         name: npm test 
         working_directory: ./backend
         command: |
           npm run test

  frontend_test:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
         name: npm test 
         working_directory: ./frontend
         command: |
           npm run test

  backend_scan:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
         name: Scan Vulnerabilities Backend 
         working_directory: ./backend
         command: |
           npm audit fix --audit-level critical

  frontend_scan:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
         name: Scan Vulnerabilities Frontend 
         working_directory: ./frontend
         command: |
           npm install
           npm audit fix --audit-level critical

  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install Tar dependecy
          working_directory: ./
          command: yum install -y tar gzip
      - run:
         name: Create Infrastructure for Backend
         working_directory: ./.circleci/Cloudformation/
         command: |
           aws cloudformation deploy \
             --stack-name "udapeople-backend-${CIRCLE_WORKFLOW_ID:0:5}" \
             --template-file backend_server.yaml \
             --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:5}"
      - run:
          name: Save Backend URL 
          command: |
            BACKEND_IP=$(aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --filters "Name=tag:project,Values=Backend_Udapeople-${CIRCLE_WORKFLOW_ID:0:5}" \
              --output text)

            curl -H "Content-Type: text/plain" -H "token: 3b83cd84-cf9f-451f-a7cd-9fbc3fed481d" --request PUT --data "http://$BACKEND_IP:3030" https://api.memstash.io/values/Backend-URL

      - run:
         name: Create Infrastructure for Frontend
         working_directory: ./.circleci/Cloudformation/
         command: |
           aws cloudformation deploy \
             --stack-name "udapeople-frontend-${CIRCLE_WORKFLOW_ID:0:5}" \
             --template-file frontend_server.yaml \
             --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:5}"

      - run:
         name: Add Backend Ip to inventory file
         working_directory: ./.circleci/ansible/
         command: |
           aws ec2 describe-instances \
             --query 'Reservations[*].Instances[*].PublicIpAddress' \
             --filters "Name=tag:project,Values=Backend_Udapeople-${CIRCLE_WORKFLOW_ID:0:5}" \
             --output text 
             #>> inventory
           #cat inventory
      - persist_to_workspace:
         root: . 
         paths:
           -  .circleci/ansible/inventory
   
  configure-infra:
    docker:
      - image: python:3.9.0-alpine
    steps:
      - checkout
      - attach_workspace:
          at: . 
      - add_ssh_keys:
          fingerprints: ["8a:8e:f7:d1:ae:75:09:d7:91:08:11:67:70:07:ec:cb"] 
      - run:
          name: Install Dependencies to backend server
          working_directory: ./.circleci/ansible
          command: |
            apk add --update ansible
            ansible --version
      - run:
          name: Configuring backend server
          working_directory: ./circleci/ansible/
          command: |
            pwd &&
            ls -la
            cat inventory
            ansible-playbook -i inventory configure-server.yml
 
        
workflows:
  welcome:
    jobs:
#      - build_backend
#      - build_frontend
#      - backend_test:
#          requires:
#            - build_backend
#      - frontend_test:
#          requires:
#            - build_frontend
#      - backend_scan:
#          requires:
#            - build_backend 
#      - frontend_scan:
#          requires:
 #           - build_frontend 
      - create_infrastructure #:
#         requires: [frontend_test, backend_test, frontend_scan, backend_scan]
      - configure-infra:
          requires:
            - create_infrastructure 
